<?php
require_once "Apache/LookupUri.php";

class Apache_Rewriter {
	var $VERSION = "1.10";

	// Static function.
	// Changes all the global variables to the state if
	// they was generated by request $uri. This function is
	// used to "emulate" ModRewrite behavour.
	function doPseudoRedirect($uri, $use_error=false)
	{
		// When mod_rewrite is active, we shoild NOT lookupe RELATIVE 
		// urls (apache bug?). Then always lookup absolute urls.
		if ($uri && $uri[0]!='/') {
			$dir = dirname($_SERVER['SCRIPT_NAME']);
			if (!$dir || $dir == "/" || $dir == "\\") $dir = "";
			$uri = "$dir/$uri";
		}
		$info = apache_lookup_uri($uri);

		$_SERVER["REDIRECT_URL"] = $info->uri;
		$_SERVER["PATH_TRANSLATED"] = $info->filename;
		$_SERVER["REQUEST_URI"] = $info->unparsed_uri;
		$_SERVER["QUERY_STRING"] = isset($info->args)? $info->args : '';
		parse_str($_SERVER["QUERY_STRING"], $_GET);
		
		if (ini_get("register_globals")) $GLOBALS += $_GET;
		if (isset($_REQUEST)) $_REQUEST += $_GET;
		if (isset($GLOBALS["HTTP_GET_VARS"])) $GLOBALS["HTTP_GET_VARS"] = $_GET;
		if (isset($_SERVER['argv'])) {
			$_SERVER['argv'] = explode("+", $_SERVER["QUERY_STRING"]);
			$_SERVER['argc'] = count($_SERVER['argv']);
		}
		Apache_Rewriter::_correctVars($GLOBALS, array(
			"argc" => "argc",
			"argv" => "argv",
			"QUERY_STRING" => "QUERY_STRING",
			"REQUEST_URI" => "REQUEST_URI",
			"PHP_SELF" => "REDIRECT_URL",
			"SCRIPT_NAME" => "REDIRECT_URL",
			"SCRIPT_FILENAME" => "PATH_TRANSLATED",
		));
#		echo "{$_SERVER['SCRIPT_NAME']} - {$_SERVER['REDIRECT_URL']}";
		
		if ($use_error) {
			if (!file_exists($_SERVER['PATH_TRANSLATED'])) {
				Apache_Rewriter::doErrorDocument($use_error);
			}
		}

		chdir(dirname($_SERVER['PATH_TRANSLATED']));
	}


	// Static function.
	// Generates the ErrorDocument request.
	// Can be used to drop to the error page any time.
	function doErrorDocument($err=404)
	{
		# Search down for .htaccess-es.
		$h = false;
		for ($path=getcwd(); strlen($path) >= strlen($_SERVER["DOCUMENT_ROOT"]); $path=dirname($path)) {
			$file = @file("$path/.htaccess"); if (!$file) continue;
			foreach ($file as $s) {
				if (!preg_match('/^\\s*ErrorDocument\\s+'.$err.'\\s+(.*)/is', $s, $p)) continue;
				$h = trim($p[1]);
				$h = preg_replace('/^"(.*)"$/s', '$1', $h);
				break(2);
			}
		}
		if ($h !== false) {
			virtual($h);
		} else {
			$msg = "not found";
			if ($err == 404) $msg = "not found";
			if ($err == 403) $msg = "forbidden";
			if ($err == 500) $msg = "pained";
			echo "<html><head><title>$err ".ucwords($msg)."</title></head>";
			echo "<body><h1>".ucwords($msg)."</h1>The requested URL <tt>".htmlspecialchars(getenv("REQUEST_URI"))."</tt> was $msg on this server.";
			echo "<p><hr>".getenv("SERVER_SIGNATURE")."</body>";
#			phpinfo();
		}
		exit;
	}
	
	function _correctVars(&$arr, $map, $level=0)
	{
		if (!$level) foreach ($map as $k => $v) putenv("$k=".$_SERVER[$v]);
		foreach ($arr as $k => $v) {
			if ($k == "GLOBALS") continue;
			if (isset($map[$k])) {
				$arr[$k] = $_SERVER[$map[$k]];
			} elseif ($level < 3 && is_array($arr[$k])) {
				Apache_Rewriter::_correctVars($arr[$k], $map, $level+1);
				continue;
			}
		}
	}
}
?>